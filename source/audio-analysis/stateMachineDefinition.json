{
    "StartAt": "Sanity check",
    "States": {
        "Sanity check": {
            "Type": "Pass",
            "Result": "start-transcribe",
            "ResultPath": "$.operation",
            "Next": "Start transcribe"
        },
        "Start transcribe": {
            "Type": "Task",
            "Resource": "${x0}",
            "Next": "Wait for transcribe",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 2,
                    "BackoffRate": 1.2
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Transcribe error"
                }
            ]
        },
        "Wait for transcribe": {
            "Type": "Wait",
            "Seconds": 24,
            "Next": "Check transcribe status"
        },
        "Check transcribe status": {
            "Type": "Task",
            "Resource": "${x0}",
            "Parameters": {
                "operation": "check-transcribe-status",
                "uuid.$": "$.uuid",
                "status.$": "$.status",
                "progress.$": "$.progress",
                "input.$": "$.next"
            },
            "Next": "Transcribe completed?",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 6,
                    "BackoffRate": 1.1
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Transcribe error"
                }
            ]
        },
        "Transcribe completed?": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.status",
                    "StringEquals": "COMPLETED",
                    "Next": "Download transcripts"
                }
            ],
            "Default": "Wait for transcribe"
        },
        "Transcribe error": {
            "Type": "Fail"
        },
        "Download transcripts": {
            "Type": "Task",
            "Resource": "${x0}",
            "Parameters": {
                "operation": "download-transcripts",
                "uuid.$": "$.uuid",
                "status": "NOT_STARTED",
                "progress": 0,
                "input.$": "$.next"
            },
            "Next": "Start text analysis",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 4,
                    "BackoffRate": 1.1
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Download error"
                }
            ]
        },
        "Download error": {
            "Type": "Fail"
        },
        "Start text analysis": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "Subtitle params",
                    "States": {
                        "Subtitle params": {
                            "Type": "Pass",
                            "Parameters": {
                                "operation": "create-subtitle",
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress": 0,
                                "input.$": "$.next"
                            },
                            "Next": "Create subtitle"
                        },
                        "Create subtitle": {
                            "Type": "Task",
                            "Resource": "${x1}",
                            "Next": "Subtitle completed",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 2,
                                    "BackoffRate": 1.2
                                }
                            ],
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "Next": "Subtitle error"
                                }
                            ]
                        },
                        "Subtitle completed": {
                            "Type": "Succeed"
                        },
                        "Subtitle error": {
                            "Type": "Fail"
                        }
                    }
                },
                {
                    "StartAt": "Entity params",
                    "States": {
                        "Entity params": {
                            "Type": "Pass",
                            "Parameters": {
                                "operation": "start-entity",
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress": 0,
                                "input.$": "$.next"
                            },
                            "Next": "Entity enabled?"
                        },
                        "Entity enabled?": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.input.aiOptions.entity",
                                    "BooleanEquals": false,
                                    "Next": "Entity skipped"
                                }
                            ],
                            "Default": "Start entity"
                        },
                        "Entity skipped": {
                            "Type": "Succeed"
                        },
                        "Start entity": {
                            "Type": "Task",
                            "Resource": "${x0}",
                            "Next": "Did entity start?",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 8,
                                    "BackoffRate": 1.2
                                }
                            ],
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "Next": "Entity error"
                                }
                            ]
                        },
                        "Did entity start?" : {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.status",
                                    "StringEquals": "NO_DATA",
                                    "Next": "Entity skipped"
                                }
                            ],
                            "Default": "Create entity track"
                        },
                        "Create entity track": {
                            "Type": "Task",
                            "Resource": "${x1}",
                            "Parameters": {
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress": 0,
                                "operation": "create-entity-track",
                                "input.$": "$.next"
                            },
                            "Next": "Entity succeed",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 6,
                                    "BackoffRate": 1.1
                                }
                            ],
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "Next": "Entity error"
                                }
                            ]
                        },
                        "Entity error": {
                            "Type": "Fail"
                        },
                        "Entity succeed": {
                            "Type": "Succeed"
                        }
                    }
                },
                {
                    "StartAt": "Keyphrase params",
                    "States": {
                        "Keyphrase params": {
                            "Type": "Pass",
                            "Parameters": {
                                "operation": "start-keyphrase",
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress": 0,
                                "input.$": "$.next"
                            },
                            "Next": "Keyphrase enabled?"
                        },
                        "Keyphrase enabled?": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.input.aiOptions.keyphrase",
                                    "BooleanEquals": false,
                                    "Next": "Keyphrase skipped"
                                }
                            ],
                            "Default": "Start keyphrase"
                        },
                        "Keyphrase skipped": {
                            "Type": "Succeed"
                        },
                        "Start keyphrase": {
                            "Type": "Task",
                            "Resource": "${x0}",
                            "Next": "Did keyphrase start?",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 8,
                                    "BackoffRate": 1.2
                                }
                            ],
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "Next": "Keyphrase error"
                                }
                            ]
                        },
                        "Did keyphrase start?" : {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.status",
                                    "StringEquals": "NO_DATA",
                                    "Next": "Keyphrase skipped"
                                }
                            ],
                            "Default": "Create keyphrase track"
                        },
                        "Create keyphrase track": {
                            "Type": "Task",
                            "Resource": "${x1}",
                            "Parameters": {
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress": 0,
                                "operation": "create-keyphrase-track",
                                "input.$": "$.next"
                            },
                            "Next": "Keyphrase succeed",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 6,
                                    "BackoffRate": 1.1
                                }
                            ],
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "Next": "Keyphrase error"
                                }
                            ]
                        },
                        "Keyphrase error": {
                            "Type": "Fail"
                        },
                        "Keyphrase succeed": {
                            "Type": "Succeed"
                        }
                    }
                },
                {
                    "StartAt": "Sentiment params",
                    "States": {
                        "Sentiment params": {
                            "Type": "Pass",
                            "Parameters": {
                                "operation": "start-sentiment",
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress": 0,
                                "input.$": "$.next"
                            },
                            "Next": "Sentiment enabled?"
                        },
                        "Sentiment enabled?": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.input.aiOptions.sentiment",
                                    "BooleanEquals": false,
                                    "Next": "Sentiment skipped"
                                }
                            ],
                            "Default": "Start sentiment"
                        },
                        "Sentiment skipped": {
                            "Type": "Succeed"
                        },
                        "Start sentiment": {
                            "Type": "Task",
                            "Resource": "${x0}",
                            "Next": "Did sentiment start?",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 8,
                                    "BackoffRate": 1.2
                                }
                            ],
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "Next": "Sentiment error"
                                }
                            ]
                        },
                        "Did sentiment start?" : {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.status",
                                    "StringEquals": "NO_DATA",
                                    "Next": "Sentiment skipped"
                                }
                            ],
                            "Default": "Create sentiment track"
                        },
                        "Create sentiment track": {
                            "Type": "Task",
                            "Resource": "${x1}",
                            "Parameters": {
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress": 0,
                                "operation": "create-sentiment-track",
                                "input.$": "$.next"
                            },
                            "Next": "Sentiment succeed",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 6,
                                    "BackoffRate": 1.1
                                }
                            ],
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "Next": "Sentiment error"
                                }
                            ]
                        },
                        "Sentiment error": {
                            "Type": "Fail"
                        },
                        "Sentiment succeed": {
                            "Type": "Succeed"
                        }
                    }
                },
                {
                    "StartAt": "Topic params",
                    "States": {
                        "Topic params": {
                            "Type": "Pass",
                            "Parameters": {
                                "operation": "start-topic",
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress": 0,
                                "input.$": "$.next"
                            },
                            "Next": "Topic enabled?"
                        },
                        "Topic enabled?": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.input.aiOptions.topic",
                                    "BooleanEquals": false,
                                    "Next": "Topic skipped"
                                }
                            ],
                            "Default": "Start topic"
                        },
                        "Topic skipped": {
                            "Type": "Succeed"
                        },
                        "Start topic": {
                            "Type": "Task",
                            "Resource": "${x0}",
                            "Next": "Did topic start?",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 2,
                                    "BackoffRate": 1.2
                                }
                            ],
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "Next": "Topic error"
                                }
                            ]
                        },
                        "Did topic start?" : {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.status",
                                    "StringEquals": "NO_DATA",
                                    "Next": "Topic skipped"
                                }
                            ],
                            "Default": "Wait for topic"
                        },
                        "Wait for topic": {
                            "Type": "Wait",
                            "Seconds": 24,
                            "Next": "Check topic status"
                        },
                        "Check topic status": {
                            "Type": "Task",
                            "Resource": "${x0}",
                            "Parameters": {
                                "uuid.$": "$.uuid",
                                "status.$": "$.status",
                                "progress.$": "$.progress",
                                "operation": "check-topic-status",
                                "input.$": "$.next"
                            },
                            "Next": "Topic completed?",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 6,
                                    "BackoffRate": 1.1
                                }
                            ],
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "Next": "Topic error"
                                }
                            ]
                        },
                        "Topic completed?": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.status",
                                    "StringEquals": "COMPLETED",
                                    "Next": "Collect topic results"
                                }
                            ],
                            "Default": "Wait for topic"
                        },
                        "Collect topic results": {
                            "Type": "Task",
                            "Resource": "${x1}",
                            "Parameters": {
                                "uuid.$": "$.uuid",
                                "status.$": "$.status",
                                "progress.$": "$.progress",
                                "operation": "collect-topic-results",
                                "input.$": "$.next"
                            },
                            "Next": "Topic succeed",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 6,
                                    "BackoffRate": 1.1
                                }
                            ],
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "Next": "Topic error"
                                }
                            ]
                        },
                        "Topic error": {
                            "Type": "Fail"
                        },
                        "Topic succeed": {
                            "Type": "Succeed"
                        }
                    }
                },
                {
                    "StartAt": "Classification params",
                    "States": {
                        "Classification params": {
                            "Type": "Pass",
                            "Parameters": {
                                "operation": "start-classification",
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress": 0,
                                "input.$": "$.next"
                            },
                            "Next": "Classification enabled?"
                        },
                        "Classification enabled?": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.input.aiOptions.classification",
                                    "BooleanEquals": false,
                                    "Next": "Classification skipped"
                                }
                            ],
                            "Default": "Start classification"
                        },
                        "Classification skipped": {
                            "Type": "Succeed"
                        },
                        "Start classification": {
                            "Type": "Task",
                            "Resource": "${x0}",
                            "Next": "Wait for classification",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 2,
                                    "BackoffRate": 1.2
                                }
                            ],
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "Next": "Classification error"
                                }
                            ]
                        },
                        "Wait for classification": {
                            "Type": "Wait",
                            "Seconds": 24,
                            "Next": "Check classification status"
                        },
                        "Check classification status": {
                            "Type": "Task",
                            "Resource": "${x0}",
                            "Parameters": {
                                "uuid.$": "$.uuid",
                                "status.$": "$.status",
                                "progress.$": "$.progress",
                                "operation": "check-classification-status",
                                "input.$": "$.next"
                            },
                            "Next": "Classification completed?",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 6,
                                    "BackoffRate": 1.1
                                }
                            ],
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "Next": "Classification error"
                                }
                            ]
                        },
                        "Classification completed?": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.status",
                                    "StringEquals": "COMPLETED",
                                    "Next": "Collect classification results"
                                }
                            ],
                            "Default": "Wait for classification"
                        },
                        "Collect classification results": {
                            "Type": "Task",
                            "Resource": "${x1}",
                            "Parameters": {
                                "uuid.$": "$.uuid",
                                "status.$": "$.status",
                                "progress.$": "$.progress",
                                "operation": "collect-classification-results",
                                "input.$": "$.next"
                            },
                            "Next": "Classification succeed",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 6,
                                    "BackoffRate": 1.1
                                }
                            ],
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "Next": "Classification error"
                                }
                            ]
                        },
                        "Classification error": {
                            "Type": "Fail"
                        },
                        "Classification succeed": {
                            "Type": "Succeed"
                        }
                    }
                }
            ],
            "Next": "Completed"
        },
        "Completed": {
            "Type": "Succeed"
        }
    }
}